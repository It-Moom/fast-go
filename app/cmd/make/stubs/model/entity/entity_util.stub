package {{PackageName}}

import (
    "fast-go/pkg/app"
    "fast-go/pkg/database"
    "fast-go/pkg/paginator"
    "github.com/gin-gonic/gin"
)


func ({{VariableName}} *{{StructName}}) Create() {
    database.DB.Create(&{{VariableName}})
}

func ({{VariableName}} *{{StructName}}) Save() (rowsAffected int64) {
    result := database.DB.Save(&{{VariableName}})
    return result.RowsAffected
}

func ({{VariableName}} *{{StructName}}) Delete() (rowsAffected int64) {
    result := database.DB.Delete(&{{VariableName}})
    return result.RowsAffected
}

func FindById(idstr string) ({{VariableName}} {{StructName}}) {
    database.DB.Where("id", idstr).First(&{{VariableName}})
    return
}

func FindBy(field, value string) ({{VariableName}} {{StructName}}) {
    database.DB.Where("? = ?", field, value).First(&{{VariableName}})
    return
}

func IsExist(field, value string) bool {
    var count int64
    database.DB.Model({{StructName}}{}).Where(" = ?", field, value).Count(&count)
    return count > 0
}

func Paginate(c *gin.Context, perPage int) ({{VariableName}} []{{StructName}}, paginate paginator.Paging) {
    paginate = paginator.Paginate(
        c,
        database.DB.Model({{StructName}}{}),
        &{{VariableName}},
        app.URL(database.TableName(&{{StructName}}{})),
        perPage,
    )
    return
}
